package cyan.lang

object System
    public fun exit { 
        @javacode<<< 
            System.exit(0);
        >>>    
    }
       // ends the program with a return value
    public fun exit: (Int errorCode) { 
        @javacode<<< 
            System.exit(_errorCode.n);
        >>>    
    }
       // runs the garbage collector
    public fun gc { 
        @javacode<*<
           System.gc();
        >*>
    }
       // current time in milliseconds
    public fun currentTime -> Long { 
        @javacode<*<
            return new CyLong(System.currentTimeMillis());
        >*>    
    }
       // prints the stack of called methods in the
       // standard output
    public fun printMethodStack {  
        @javacode<**
            StackTraceElement[] elements = Thread.currentThread().getStackTrace();

            for( int i = 0; i < elements.length; i++) {
                System.out.println( elements[i] );
            }
        **>
    }
    /*
       numMethodReturned is the number of the method that owns the 'return'
       statement that was executed.
       currentNumMethod is the number of method being executed in the stack 
       of called methods. Each method keeps, in a local variable numThisMethod, 
       its number. 'numThisMethod = currentMethodNumber++;' is the first 
       statement of each method. returnedValue is the value returned by a 
       return statement of a function call. 
    */
    
    @javacode{**
        static public int numMethodToReturn = -1;
        static public int currentNumMethod = 0;
        static public Object returnedValue = null;
    **}
    
end

